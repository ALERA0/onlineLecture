"use client";

import {
  combineReducers,
  configureStore,
  getDefaultMiddleware,
} from "@reduxjs/toolkit";
import logger from "redux-logger";
import {
  addStudentToClassSlice,
  assignSubjectsToTeacherSlice,
  assignTeacherToClassesSlice,
  authAdminLoginSlice,
  authAdminLogoutSlice,
  authAdminRegisterSlice,
  authUserLoginSlice,
  authUserLogoutSlice,
  createClassScheduleSlice,
  createSchoolClassSlice,
  createSchoolSlice,
  createSchoolStaffSlice,
  createSubjectSlice,
  createSupportTicketSlice,
  createUserByAdminSlice,
  deactiveTeacherByIdSlice,
  deleteAllLogsSlice,
  deleteAllPrismaLogsSlice,
  deleteDirectorByOwnerIdSlice,
  deleteStudentSlice,
  deleteSubjectSlice,
  getAdminUserByIdSlice,
  getAllSchoolsSlice,
  getAllUsersSlice,
  getClassByIdSlice,
  getClassScheduleSlice,
  getClassesBySchoolIdSlice,
  getDirectorByIdSlice,
  getDirectorsBySchoolIdSlice,
  getSchoolByIdSlice,
  getSchoolByOwnerIdlice,
  getStudentByIdSlice,
  getStudentsByClassIdSlice,
  getSubjectByIdSlice,
  getSubjectsBySchoolIdSlice,
  getTeacherAssignedToSubjectSlice,
  getTeacherByIdSlice,
  getTeacherBySchoolIdSlice,
  getTeachersByClassIdSlice,
  getUnassignedTeachersForClassSlice,
  getUnassignedTeachersSlice,
  listAllDurationLogsSlice,
  listAllLogsSlice,
  listAllPrismaLogsSlice,
  searchClassSlice,
  searchDirectorsSlice,
  searchSchoolsSlice,
  searchStudentsSlice,
  searchSubjectSlice,
  searchTeacherClassSlice,
  searchTeachersSlice,
  setUserDataSliceSlice,
  subjectTeacherSearchSlice,
  unassignedTeachersSearchSlice,
  updateClassSlice,
  updateDirectorSlice,
  updateSchoolSlice,
  updateStudentSlice,
  updateSubjectSlice,
  updateTeacherSlice,
  updateUserProfileSlice,
} from "./slice";


const reducer = combineReducers({
  authAdminLogin: authAdminLoginSlice,
  authAdminRegister: authAdminRegisterSlice,
  authAdminLogout: authAdminLogoutSlice,
  listAllLogs: listAllLogsSlice,
  getAdminUserById: getAdminUserByIdSlice,
  updateUserProfile: updateUserProfileSlice,
  getAllUsers: getAllUsersSlice,
  createUserByAdmin: createUserByAdminSlice,
  authUserLogin: authUserLoginSlice,
  deleteAllLogs: deleteAllLogsSlice,
  listAllPrismaLogs: listAllPrismaLogsSlice,
  deleteAllPrismaLogs: deleteAllPrismaLogsSlice,
  listAllDurationLogs: listAllDurationLogsSlice,
  setUserData: setUserDataSliceSlice,
  getSchoolByOwnerId: getSchoolByOwnerIdlice,
  authUserLogout: authUserLogoutSlice,
  createSchool: createSchoolSlice,
  getAllSchools: getAllSchoolsSlice,
  getSchoolById: getSchoolByIdSlice,
  createSchoolStaff: createSchoolStaffSlice,
  getClassesBySchoolId: getClassesBySchoolIdSlice,
  createSchoolClass: createSchoolClassSlice,
  getStudentByClassId: getStudentsByClassIdSlice,
  addStudentToClass: addStudentToClassSlice,
  getTeachersByClassId: getTeachersByClassIdSlice,
  getTeacherBySchoolId: getTeacherBySchoolIdSlice,
  getDirectorsBySchoolId: getDirectorsBySchoolIdSlice,
  assignTeacherToClasses: assignTeacherToClassesSlice,
  getUnassignedTeachersForClass: getUnassignedTeachersForClassSlice,
  updateSchool: updateSchoolSlice,
  getSubjectsBySchoolId: getSubjectsBySchoolIdSlice,
  createSubject: createSubjectSlice,
  updateSubject: updateSubjectSlice,
  deleteSubject: deleteSubjectSlice,
  getSubjectById: getSubjectByIdSlice,
  getUnassignedTeachers: getUnassignedTeachersSlice,
  getTeacherAssignedToSubject: getTeacherAssignedToSubjectSlice,
  assignSubjectsToTeacher: assignSubjectsToTeacherSlice,
  createClassSchedule: createClassScheduleSlice,
  getClassSchedule: getClassScheduleSlice,
  getDirectorById: getDirectorByIdSlice,
  updateDirector: updateDirectorSlice,
  deleteDirectorByOwnerId: deleteDirectorByOwnerIdSlice,
  createSupportTicket: createSupportTicketSlice,
  searchSchools: searchSchoolsSlice,
  searchTeachers: searchTeachersSlice,
  searchDirectors: searchDirectorsSlice,
  getTeacherById: getTeacherByIdSlice,
  updateStudent: updateStudentSlice,
  updateTeacher: updateTeacherSlice,
  getStudentById: getStudentByIdSlice,
  deleteStudent: deleteStudentSlice,
  getClassById: getClassByIdSlice,
  updateClass: updateClassSlice,
  deactiveTeacherById: deactiveTeacherByIdSlice,
  searchClass: searchClassSlice,
  searchSubject: searchSubjectSlice,
  searchTeacherClass: searchTeacherClassSlice,
  subjectTeacherSearch: subjectTeacherSearchSlice,
  unassignedTeachersSearch: unassignedTeachersSearchSlice,
  searchStudents: searchStudentsSlice,

});

export const store = configureStore({
  reducer,
  middleware: (getDefaultMiddleware) =>
    getDefaultMiddleware({ serializableCheck: false }).concat(logger),
});
